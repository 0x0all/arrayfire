CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FIND_PACKAGE(Threads)
ADD_TEST(BasicTests_cpu     basic_cpu)
ADD_TEST(IndexingTests_cpu  index_cpu)
ADD_TEST(BasicTests_cuda    basic_cuda)
ADD_TEST(BasicTests_opencl  basic_opencl)

IF(${BUILD_GTEST})
    INCLUDE(${CMAKE_SOURCE_DIR}/common/build_gtest.cmake)
    ExternalProject_Get_Property(googletest SOURCE_DIR BINARY_DIR)
ELSE()
    SET(SOURCE_DIR "${CMAKE_BINARY_DIR}/third_party/src/googletest")
    SET(BINARY_DIR "${CMAKE_BINARY_DIR}/third_party/src/googletest-build")
ENDIF()

SET(GTEST_SRC               ${SOURCE_DIR})
SET(GTEST_BUILD             ${BINARY_DIR})
SET(GTEST_INCLUDE_DIRS      "${GTEST_SRC}/include")
SET(GTEST_LIBRARY_DIRS      "${GTEST_BUILD}/ReleaseLibs")

SET(GTEST_BOTH_LIBRARIES    "${GTEST_LIBRARY_DIRS}/libgtest.a"
                            "${GTEST_LIBRARY_DIRS}/libgtest_main.a")

IF(${BUILD_CPU})
    ADD_EXECUTABLE(basic_cpu basic.cpp)
    ADD_EXECUTABLE(index_cpu index.cpp)
    IF(${BUILD_GTEST})
        ADD_DEPENDENCIES(basic_cpu googletest)
        ADD_DEPENDENCIES(index_cpu googletest)
    ENDIF()
    TARGET_LINK_LIBRARIES(basic_cpu afcpu ${CMAKE_THREAD_LIBS_INIT} ${GTEST_BOTH_LIBRARIES})
    TARGET_LINK_LIBRARIES(index_cpu afcpu ${CMAKE_THREAD_LIBS_INIT} ${GTEST_BOTH_LIBRARIES})
ENDIF()
IF(${BUILD_CUDA})
    ADD_EXECUTABLE(basic_cuda basic.cpp)
    ADD_EXECUTABLE(index_cuda index.cpp)
    IF(${BUILD_GTEST})
        ADD_DEPENDENCIES(basic_cuda googletest)
        ADD_DEPENDENCIES(index_cuda googletest)
    ENDIF()
    TARGET_LINK_LIBRARIES(basic_cuda afcuda ${CMAKE_THREAD_LIBS_INIT} ${GTEST_BOTH_LIBRARIES})
    TARGET_LINK_LIBRARIES(index_cuda afcuda ${CMAKE_THREAD_LIBS_INIT} ${GTEST_BOTH_LIBRARIES})
ENDIF()
IF(${BUILD_OPENCL})
    ADD_EXECUTABLE(basic_opencl basic.cpp)
    ADD_EXECUTABLE(index_opencl index.cpp)
    IF(${BUILD_GTEST})
        ADD_DEPENDENCIES(basic_opencl googletest)
        ADD_DEPENDENCIES(index_opencl googletest)
    ENDIF()
    TARGET_LINK_LIBRARIES(basic_opencl afopencl ${CMAKE_THREAD_LIBS_INIT} ${GTEST_BOTH_LIBRARIES})
    TARGET_LINK_LIBRARIES(index_opencl afopencl ${CMAKE_THREAD_LIBS_INIT} ${GTEST_BOTH_LIBRARIES})
ENDIF()

INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})
