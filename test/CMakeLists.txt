CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

FIND_PACKAGE(Threads REQUIRED)
IF(CMAKE_USE_PTHREADS_INIT)
    SET(THREAD_LIB_FLAG "-pthread")
ELSE()
    SET(THREAD_LIB_FLAG ${CMAKE_THREAD_LIBS_INIT})
ENDIF()

IF(${BUILD_GTEST})
    INCLUDE(${CMAKE_SOURCE_DIR}/common/build_gtest.cmake)
    ExternalProject_Get_Property(googletest SOURCE_DIR BINARY_DIR)

    SET(GTEST_BINARY_DIR ${BINARY_DIR})
    SET(GTEST_SOURCE_DIR ${SOURCE_DIR})

    INCLUDE(${CMAKE_SOURCE_DIR}/common/GetTestData.cmake)
    ExternalProject_Get_Property(arrayfire_data SOURCE_DIR)

    SET(TESTDATA_SOURCE_DIR ${SOURCE_DIR})
ELSE()
    SET(GTEST_SOURCE_DIR "${CMAKE_BINARY_DIR}/third_party/src/googletest")
    SET(GTEST_BINARY_DIR "${CMAKE_BINARY_DIR}/third_party/src/googletest-build")

    SET(TESTDATA_SOURCE_DIR "${CMAKE_BINARY_DIR}/data/src/arrayfire_data")
ENDIF()

SET(GTEST_SRC               ${GTEST_SOURCE_DIR})
SET(GTEST_BUILD             ${GTEST_BINARY_DIR})
SET(GTEST_INCLUDE_DIRS      "${GTEST_SRC}/include")
SET(GTEST_LIBRARY_DIRS      "${GTEST_BUILD}/ReleaseLibs")

SET(GTEST_BOTH_LIBRARIES    "${GTEST_LIBRARY_DIRS}/libgtest.a"
                            "${GTEST_LIBRARY_DIRS}/libgtest_main.a")

ADD_DEFINITIONS("-D TEST_DIR=\"\\\"${TESTDATA_SOURCE_DIR}\\\"\"")

MACRO(CREATE_TESTS BACKEND)
    FILE(GLOB FILES "*.cpp")
    FOREACH(FILE ${FILES})
        GET_FILENAME_COMPONENT(FNAME ${FILE} NAME_WE)
        SET(TEST_NAME ${FNAME}_${BACKEND})

        ADD_TEST(Test_${TEST_NAME} ${TEST_NAME})
        ADD_EXECUTABLE(${TEST_NAME} ${FNAME}.cpp)
        IF (${BUILD_GTEST})
            ADD_DEPENDENCIES(${TEST_NAME} googletest arrayfire_data)
        ENDIF()
        TARGET_LINK_LIBRARIES(${TEST_NAME} af${BACKEND} ${THREAD_LIB_FLAG} ${GTEST_BOTH_LIBRARIES})

     ENDFOREACH()
ENDMACRO(CREATE_TESTS)


IF(${BUILD_CPU})
    CREATE_TESTS(cpu)
ENDIF()

IF(${BUILD_CUDA})
    CREATE_TESTS(cuda)
ENDIF()

IF(${BUILD_OPENCL})
    CREATE_TESTS(opencl)
ENDIF()

INCLUDE_DIRECTORIES(
    ${CMAKE_CURRENT_SOURCE_DIR}
    ${GTEST_INCLUDE_DIRS})
